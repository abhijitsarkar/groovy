/*
 * Copyright (c) 2014, the original author or authors.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; version 3 of the License.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * A copy of the GNU General Public License accompanies this software,
 * and is also available at http://www.gnu.org/licenses.
 */

subprojects {
    apply plugin: 'groovy'
    apply plugin: 'maven'
    apply plugin: 'idea'

    apply from: 'https://raw.github.com/abhijitsarkar/gradle/master/gradle-common/build.gradle'

    group = projectGroup
    version = projectVersion

    configurations.all {
        resolutionStrategy {
            eachDependency { DependencyResolveDetails details ->
                if (details.requested.group == 'org.springframework') {
                    details.useVersion springVersion
                }
            }
        }
    }

    repositories {
        maven {
            url 'http://repo.spring.io/snapshot'
        }
    }

    task unitTest(type: Test) {
        excludes = ['**/*IntegrationTest*.class'] as Set
    }

    task integrationTest(type: Test) {
        includes = ['**/*IntegrationTestSuite.class'] as Set
    }

    dependencies {
        compile(
                [group: 'org.codehaus.groovy', name: 'groovy-all', version: groovyVersion],
                [group: 'org.springframework', name: 'spring-beans', version: springVersion],
                [group: 'org.springframework', name: 'spring-context', version: springVersion]
        )
        testCompile(
                [group: 'org.gmock', name: 'gmock', version: gmockVersion],
                [group: 'junit', name: 'junit', version: junitVersion],
                [group: 'org.springframework', name: 'spring-test', version: springVersion]
        )
    }

    sourceSets {
        main {
            resources {
                srcDir 'src/main/config'
            }
        }
    }

    idea {
        module {
            sourceDirs += file('src/main/config')
        }
    }
}
