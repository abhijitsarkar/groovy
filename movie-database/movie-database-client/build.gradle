/*
 * Copyright (c) 2014, the original author or authors.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; version 3 of the License.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * A copy of the GNU General Public License accompanies this software,
 * and is also available at http://www.gnu.org/licenses.
 */

buildscript {
    repositories {
        mavenCentral()
        maven {
            url 'http://repo.spring.io/milestone'
        }
        maven {
            url 'http://repo.spring.io/snapshot'
        }
    }
    dependencies {
        classpath(
            [group: 'org.springframework.boot', name: 'spring-boot-gradle-plugin', version: springBootVersion]
        )
    }
}

apply plugin: 'spring-boot'

configurations.all {
    resolutionStrategy {
        eachDependency { DependencyResolveDetails details ->
            if (details.requested.group == 'org.eclipse.jetty') {
                details.useVersion jettyVersion
            } else if (details.requested.group == 'org.slf4j') {
                details.useVersion slf4jVersion
            }
        }
    }
    resolutionStrategy.cacheChangingModulesFor 60, 'seconds'
}

repositories {
    mavenCentral()
    maven {
        url 'http://repo.spring.io/milestone'
    }
    maven {
        url 'http://repo.spring.io/snapshot'
    }
}

dependencies {
    compile(
            project(':movie-database-service'),
            [group: 'org.springframework.boot', name: 'spring-boot-starter', version: springBootVersion, changing: true],
            [group: 'org.springframework.boot', name: 'spring-boot-starter-jetty', version: springBootVersion, changing: true],
            [group: 'org.springframework', name: 'spring-webmvc', version: springVersion]
    )
    compile(
            [group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: springBootVersion, changing: true]
    ) {
        exclude module: 'spring-boot-starter-tomcat'
    }
    runtime(
            [group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: jacksonVersion],
    )
    testCompile(
            [group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: springBootVersion],
            project(':movie-database-integ-test-util')
    )
}